name: Auto Check and Update Patch Data

on:
  workflow_dispatch:
    inputs:
      log_level:
        description: 'Log Level'
        required: false
        default: info
      check_all:
        description: 'Check all item'
        required: false
        default: false
  schedule:
    - cron: "0 7 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Check and Compare Patch Version
      id: check_and_compare_version
      run: |
        # 获取解包文件的最新 patch 版本
        FFXIV_PATCH_VERSION=$(git ls-remote https://github.com/thewakingsands/ffxiv-datamining-cn | grep "patch" | awk -F "-" '{print $2}' | tail -1)
        echo "解包文件版本号: $FFXIV_PATCH_VERSION"
    
        # 获取 GarlandTools 的当前主版本和最新的补丁版本
        MAJOR_VERSION=$(curl -s "https://garlandtools.cn/db/doc/core/chs/3/data.json" | jq -r '.patch.current')
        PATCH_VERSIONS=$(curl -s "https://garlandtools.cn/db/doc/patch/chs/2/${MAJOR_VERSION}.json" | jq -r '.patch.patches | keys[]')
        GARLANDTOOLS_VERSION=$(echo "${PATCH_VERSIONS}" | tr ' ' '\n' | sort -n | tail -n 1)
        echo "花环补丁版本号: $GARLANDTOOLS_VERSION"
    
        # 比较两个版本是否一致
        if [ "$FFXIV_PATCH_VERSION" != "$GARLANDTOOLS_VERSION" ]; then
          echo "解包文件版本与花环工具版本不一致，无需更新。"
          exit 0
        fi
    
        # 检查本地 JSON 文件中的版本是否已经是最新的
        LOCAL_VERSION=$(jq -r '.data' Data/version)
        echo "本地存储的版本号: $LOCAL_VERSION"
    
        if [ "$FFXIV_PATCH_VERSION" == "$LOCAL_VERSION" ]; then
          echo "No need to update."
        else
          echo "Need to update."
          echo "patch_version=$FFXIV_PATCH_VERSION"  >> $GITHUB_OUTPUT
          echo "need_update=true" >> $GITHUB_OUTPUT
        fi

    - name: Setup Python
      if: ${{ steps.check_and_compare_version.outputs.need_update == 'true' }}
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      if: ${{ steps.check_and_compare_version.outputs.need_update == 'true' }}
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Run Python script
      id: pull_data
      if: ${{ steps.check_and_compare_version.outputs.need_update == 'true' }}
      env:
        FFXIV_PATCH_VERSION: ${{steps.check_and_compare_version.outputs.patch_version}}
        CHECK_ALL: ${{ github.event.inputs.check_all }}
        LOG_LEVEL: ${{ github.event.inputs.log_level }}
      run: |
        python format_item.py
        echo "need_push_code=true" >> $GITHUB_OUTPUT
      working-directory: Data

    - name: Configure Git user
      if: ${{ steps.pull_data.outputs.need_push_code == 'true' }}
      run: |
        git config --global user.name 'Naga Resst'
        git config --global user.email 'nagaresst@live.com'

    - name: Push Code to Repo
      if : ${{ steps.pull_data.outputs.need_push_code == 'true' }}
      uses: devops-infra/action-commit-push@master
      with:
        github_token: "${{ secrets.GIT_KEY }}"
        commit_message: "Automatic commit: Update Item Data"

    - name: Trigger Push Data to OSS Workflow
      if : ${{ steps.pull_data.outputs.need_push_code == 'true' }}
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: push-data.yaml
        inputs: '{"force_upload": "true"}'
